trigger: none

parameters:
- name: type
displayName: Scope
type: string
values:
- Subscription
- ManagementGroup
- ResourceGroup

- name: id
displayName: Id
type: string

variables:
- group: Policy_Variable_Group

stages:
- stage: PolicyCompliance
jobs:
- job: GetPolicyCompliance
pool:
vmImage: 'windows-2019'
steps:
- task: PowerShell@2
inputs:
filePath: 'AZ-PolicyCompliance\get-policycompliance.ps1'
pwsh: true
arguments: '-type "${{ parameters.type }}" -id "${{ parameters.id }}" -TenantID $(TenantID) -AppID $(ClientID) -AppSecret $(ClientSecret)'
displayName: 'Run PowerShell Script'

- stage: Validation
jobs:
- job: waitForValidation
displayName: Wait for external validation
pool: server
timeoutInMinutes: 4320
steps:
- task: ManualValidation@0
timeoutInMinutes: 1440
inputs:
notifyUsers: |

instructions: 'Please validate the build configuration and resume'
onTimeout: 'reject'

- stage: RemediatePolicy
jobs:
- job: RemediatePolicy
pool:
vmImage: 'windows-2019'
steps:
- task: PowerShell@2
inputs:
filePath: 'AZ-PolicyCompliance\remediate-policy.ps1'
pwsh: true
arguments: '-type "${{ parameters.type }}" -id "${{ parameters.id }}" -TenantID $(TenantID) -AppID $(ClientID) -AppSecret $(ClientSecret)'
displayName: 'Run PowerShell Script'